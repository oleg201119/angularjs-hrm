var app=angular.module("hrmasterApp",["ngRoute","ngSanitize","ngCookies","ngMaterial","ngAnimate","ui.grid","ui.grid.edit","autocomplete","ui.grid.resizeColumns","ui.grid.selection","ui.bootstrap.modal","angularUtils.directives.dirPagination","material.components.expansionPanels"]);app.config(function($routeProvider,$locationProvider){$routeProvider.when("/",{templateUrl:"assets/templates/index.html",controller:"indexController"}).when("/contactus",{templateUrl:"assets/templates/contactus.html",controller:"contactusController"}).when("/privacy",{templateUrl:"assets/templates/privacy.html",controller:"privacyController"}).when("/terms",{templateUrl:"assets/templates/terms.html",controller:"termsController"}).when("/trademarks",{templateUrl:"assets/templates/trademarks.html",controller:"trademarksController"}).when("/aboutus",{templateUrl:"assets/templates/aboutus.html",controller:"aboutusController"}).when("/jobs",{templateUrl:"assets/templates/jobs.html",controller:"jobsController"}).when("/blog",{templateUrl:"assets/templates/blog.html",controller:"blogController"}).when("/contacts",{templateUrl:"assets/templates/contacts.html",controller:"contactsController"}).when("/login",{templateUrl:"assets/templates/login.html",controller:"loginController"}).when("/logout",{templateUrl:"assets/templates/login.html",controller:"logoutController"}).when("/moreinfo",{templateUrl:"assets/templates/moreinfo.html",controller:"moreinfoController"}).when("/forgotpassword",{templateUrl:"assets/templates/forgotpassword.html",controller:"forgotpasswordController"}).when("/dashboard",{templateUrl:"assets/templates/dashboard.html",controller:"dashboardController"}).when("/employees",{templateUrl:"assets/templates/employees.html",controller:"employeeController"}).when("/project",{templateUrl:"assets/templates/project.html",controller:"projectController"}).when("/permissions",{templateUrl:"assets/templates/permissions.html",controller:"permissionsController"}).when("/resetpassword/:hash",{templateUrl:"assets/templates/resetpassword.html",controller:"resetpasswordController"}).when("/solution/:anchor",{templateUrl:"assets/templates/solution.html",controller:"solutionController"}).when("/solution",{templateUrl:"assets/templates/solution.html",controller:"solutionController"}).when("/users",{templateUrl:"assets/templates/users.html",controller:"usersController"}).when("/hrmusers",{templateUrl:"assets/templates/hrm_admin/hrmusers.html",controller:"hrmusersController"}).when("/add_hrmuser",{templateUrl:"assets/templates/hrm_admin/add_hrmuser.html",controller:"AddHrmUserController"}).when("/edit_hrmuser/:id",{templateUrl:"assets/templates/hrm_admin/edit_hrmuser.html",controller:"EditHrmUserController"}).when("/trainingcourses",{templateUrl:"assets/templates/training/trainingcourses.html",controller:"trainingController"}).when("/train_dashboard",{templateUrl:"assets/templates/training/train_dashboard.html",controller:"TrainDashboardController"}).when("/edit_course/:id",{templateUrl:"assets/templates/training/edit_course.html",controller:"EditCourseController"}).when("/add_course",{templateUrl:"assets/templates/training/add_course.html",controller:"AddCourseController"}).when("/allocatetraining",{templateUrl:"assets/templates/training/alloc_training_list.html",controller:"AllocTrainingListController"}).when("/alloc_course",{templateUrl:"assets/templates/training/alloc_course.html",controller:"AllocCourseController"}).when("/edit_alloc_course/:id",{templateUrl:"assets/templates/training/edit_alloc_course.html",controller:"EditAllocCourseController"}).when("/addCourses/:id",{templateUrl:"assets/templates/addCourses.html",controller:"addCoursesController"}).when("/addCourses/:id/:selected_num",{templateUrl:"assets/templates/addCourses.html",controller:"addCoursesController"}).when("/trainingcourselist",{templateUrl:"assets/templates/trainingcourselist.html",controller:"trainingcourselistController"}).when("/docourse/:courseid/:employeeid",{templateUrl:"assets/templates/docourse.html",controller:"docourseController"})}),app.service("hrmAPIservice",function($http,cookie){var hrmAPI={};return hrmAPI.doLogin=function(usr,pw){return $http({method:"POST",data:{username:usr,password:pw},url:"auth/login"})},hrmAPI.forgotPassword=function(email){return $http({method:"POST",data:{email:email},url:"auth/forgotpassword"})},hrmAPI.resetPassword=function(u,p){return $http({method:"POST",data:{username:u,password:p},url:"auth/resetpassword"})},hrmAPI.getEmailFromHash=function(hash){return $http({method:"POST",data:{hash:hash},url:"auth/getemailfromhash"})},hrmAPI.getPermissionData=function(){return cookie.resetCookie(),$http({method:"POST",data:{},url:"auth/getpermissiondata"})},hrmAPI.savePermissions=function(role,modules){return cookie.resetCookie(),$http({method:"POST",data:{role:role,modules:modules},url:"auth/savepermissions"})},hrmAPI.getPermissions=function(role){return cookie.resetCookie(),$http({method:"GET",data:{},url:"auth/getpermissions/"+role})},hrmAPI.getRoles=function(){return cookie.resetCookie(),$http({method:"POST",data:{action:"getRoles"},url:"assets/php/ajax.php"})},hrmAPI.getEmployeeData=function(userData){return cookie.resetCookie(),$http({method:"POST",data:{currUser:userData},url:"employee/getdata"})},hrmAPI.getUserData=function(userData,isAdmin){return cookie.resetCookie(),isAdmin=angular.isDefined(isAdmin)?isAdmin:0,$http({method:"POST",data:{currUser:userData,admin:isAdmin},url:"user/getdata"})},hrmAPI.getUsers=function(userData,isAdmin){return cookie.resetCookie(),isAdmin=angular.isDefined(isAdmin)?isAdmin:0,$http({method:"POST",data:{currUser:userData,admin:isAdmin},url:"user/getlist"})},hrmAPI.getUserGlobalData=function(){return cookie.resetCookie(),$http({method:"POST",url:"user/getglobaldata"})},hrmAPI.getUserById=function(user_id){return cookie.resetCookie(),$http({method:"POST",data:{user_id:user_id},url:"user/getuser"})},hrmAPI.getCoursesByUser=function(userId){return cookie.resetCookie(),$http({method:"POST",data:{userId:userId},url:"course/getcoursesbyuser"})},hrmAPI.searchUser=function(keyword){return cookie.resetCookie(),$http({method:"POST",data:{keyword:keyword,usertype:18},url:"user/search"})},hrmAPI.saveEmployee=function(emp,empwork,userData){return cookie.resetCookie(),$http({method:"POST",data:{action:"saveEmployee",emp:emp,empwork:empwork,currUser:userData},url:"employee/save"})},hrmAPI.delete=function(detail,userData,type){return cookie.resetCookie(),$http({method:"POST",data:{typeDetail:detail,currUser:userData,type:type},url:"delete"})},hrmAPI.get=function(id,type){return cookie.resetCookie(),$http({method:"GET",data:{},url:"get/"+type+"/"+id})},hrmAPI.saveUser=function(user,userData,newaccount){return cookie.resetCookie(),$http({method:"POST",data:{user:user,userData:userData,newaccount:newaccount},url:"user/save"})},hrmAPI.saveChildUser=function(user,userData,newaccount){return cookie.resetCookie(),$http({method:"POST",data:{user:user,userData:userData},url:"user/save_child_user"})},hrmAPI.updateUser=function(user,userData){return cookie.resetCookie(),$http({method:"POST",data:{user:user,userData:userData},url:"user/update"})},hrmAPI.getEmployeeList=function(user_id){return cookie.resetCookie(),$http({method:"POST",data:{user_id:user_id},url:"user/get_employee_list"})},hrmAPI.releaseLock=function(userId){return cookie.resetCookie(),$http({method:"POST",data:{action:"releaseLock",userId:userId},url:"assets/php/ajax.php"})},hrmAPI.activateEmployee=function(employeeId,status){return cookie.resetCookie(),$http({method:"POST",data:{action:"activateEmployee",employeeId:employeeId,status:status},url:"assets/php/ajax.php"})},hrmAPI.activateUser=function(userId,status){return cookie.resetCookie(),$http({method:"POST",data:{userId:userId,status:status},url:"user/activateuser"})},hrmAPI.activateCourse=function(courseId,status){return cookie.resetCookie(),$http({method:"POST",data:{courseId:courseId,status:status},url:"course/activatecourse"})},hrmAPI.getCourseData=function(user_id){return cookie.resetCookie(),$http({method:"POST",data:{user_id:user_id},url:"course/getdata"})},hrmAPI.getCourse=function(course_id,userData){return cookie.resetCookie(),$http({method:"POST",data:{currUser:userData,course_id:course_id},url:"course/getCourseSingle"})},hrmAPI.getCourseById=function(course_id,employee_id){return cookie.resetCookie(),$http({method:"POST",data:{currUser:"userData",course_id:course_id,employee_id:employee_id},url:"course/getCourse"})},hrmAPI.getCourseCategory=function(){return cookie.resetCookie(),$http({method:"POST",data:{currUser:"userData"},url:"course/getCate"})},hrmAPI.saveCourse=function(courseData,userData){return cookie.resetCookie(),$http({method:"POST",data:{courseData:courseData,currUser:userData},url:"course/saveCourse"})},hrmAPI.addCourse=function(courseAddData){return cookie.resetCookie(),$http({method:"POST",data:{courseData:courseAddData},url:"course/addCourse"})},hrmAPI.delCourse=function(course_id,user_id){return cookie.resetCookie(),$http({method:"POST",data:{course_id:course_id,user_id:user_id},url:"course/delCourse"})},hrmAPI.searchCourse=function(keyword){return cookie.resetCookie(),$http({method:"POST",data:{keyword:keyword},url:"course/searchCourse"})},hrmAPI.allocCourse=function(allocCourseData){return cookie.resetCookie(),$http({method:"POST",data:{allocCourseData:allocCourseData},url:"course/allocCourse"})},hrmAPI.getAllocCourseData=function(user_id){return cookie.resetCookie(),$http({method:"POST",data:{user_id:user_id},url:"course/getAllocCourses"})},hrmAPI.delAllocCourse=function(alloc_course_id,user_id){return cookie.resetCookie(),$http({method:"POST",data:{alloc_course_id:alloc_course_id,user_id:user_id},url:"course/delAllocCourse"})},hrmAPI.getAllocCourseById=function(alloc_course_id){return cookie.resetCookie(),$http({method:"POST",data:{alloc_course_id:alloc_course_id},url:"course/getAllocCourseById"})},hrmAPI.updateAllocCourse=function(allocCourseData){return cookie.resetCookie(),$http({method:"POST",data:{allocCourseData:allocCourseData},url:"course/updateAllocCourse"})},hrmAPI.submitAnswer=function(courseId,employeeId,questionId,answerId){return cookie.resetCookie(),$http({method:"POST",data:{course_id:courseId,employee_id:employeeId,question_id:questionId,answer_id:answerId},url:"course/submitanswer"})},hrmAPI}),app.service("cookie",function($rootScope,$location,$cookies,$route){var obj={};return obj.checkLoggedIn=function(returnStatus){returnStatus=!!angular.isDefined(returnStatus)&&returnStatus;var userData=this.getCookie("user");if(!1===userData){if($rootScope.isLoggedin=0,!returnStatus)return void $location.path("/")}else $rootScope.isLoggedin=1,$rootScope.showHeader=0;return userData},obj.getPermissions=function(){var perms=this.getCookie("permissions");$rootScope.perms={};var controller=$route.current.controller.replace("Controller","");angular.forEach(perms,function(obj,key){var cntl=obj.controller;$rootScope.perms[cntl]={},$rootScope.perms[cntl].read=angular.isDefined(obj.read)?obj.read:0,$rootScope.perms[cntl].write=angular.isDefined(obj.write)?obj.write:0,$rootScope.perms[cntl].delete=angular.isDefined(obj.delete)?obj.delete:0,controller!=cntl||0!=$rootScope.perms[cntl].read||$location.path("/")})},obj.setCookie=function(name,value,lengthHours){lengthHours=.5;var d=new Date,sessionHours=60*lengthHours*60*1e3;d.setTime(d.getTime()+sessionHours);var expires=d.toUTCString();$cookies.putObject(name,value,{expires:expires})},obj.resetCookie=function(){var data,cList=["user","permissions"],_this=this;angular.forEach(cList,function(value,key){!1!==(data=_this.getCookie(value))&&_this.setCookie(value,data)})},obj.getCookie=function(name){var cook=$cookies.getObject(name);return!!angular.isDefined(cook)&&cook},obj.deleteCookie=function(name){$cookies.remove(name)},obj.checkCookie=function(cookieName){var callSearch=obj.getCookie(cookieName);return""!=callSearch&&callSearch},obj}),app.controller("aboutusController",["$scope","$rootScope","cookie",function($scope,$rootScope,cookie){cookie.checkLoggedIn(!0);$rootScope.showHeader=0}]),app.controller("AddCourseController",["$scope","$rootScope","cookie","hrmAPIservice","$routeParams","$location",function($scope,$rootScope,cookie,hrmAPIservice,$routeParams,$location){function goBack(){location.href="#/trainingcourses"}var userData=cookie.checkLoggedIn(),courseCategory=[];cookie.getPermissions(),$scope.pageTitle="Add Course",$scope.course={course_type:"Multiple Choice",status:1,user_id:userData.id,time_limit:0,is_randomized:0,display_error_message:0,reorder:0,is_comeback:0,try_again:0,is_global:0,is_auto_inactive:0},$scope.showSave=0,$scope.selectedTab=0,$scope.isAdmin=17==userData.usertype_id,$scope.course_save_message="";$scope.questionNumbers=[],$scope.answerNumbers=[],$scope.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1};for(i=0;i<30;i++)$scope.questionNumbers[i]=i+1;for(var i=0;i<5;i++)$scope.answerNumbers[i]=i+1;hrmAPIservice.getCourseCategory().then(function(response){response.data.course_category.forEach(function(element,index){var temp='{ "value" : "'+response.data.course_category[index].course_category_name+'", "label" : "'+response.data.course_category[index].course_category_name+'", "id" : "'+response.data.course_category[index].course_category_id+'" }';response.data.course_category[index].course_category_id,response.data.course_category[index].course_category_name;courseCategory.push(JSON.parse(temp))}),$scope.course_category=courseCategory,$scope.course_category.length>0&&($scope.course.course_category_id=$scope.course_category[0].id)}),$scope.saveCourse=function(){hrmAPIservice.saveCourse($scope.course,userData).then(function(response){0==response.data.success?goBack():($scope.course_save_message="Course has been successfully created and can now be allocated to staff",$location.path("/trainingcourses"))})},$scope.cancel=function(){goBack()},$scope.nextTab=function(){$scope.selectedTab++,$scope.selectedTab>1&&($scope.showSave=1)},$scope.submit=function(event){event.preventDefault(),console.log("Submit")},$scope.updateQuestionNumber=function(){if(null==$scope.course.questions){$scope.course.questions=[];for(i=0;i<$scope.course.question_count;i++)$scope.course.questions[i]={index:i,name:"Question "+(i+1)}}else if($scope.course.questions.length>=$scope.course.question_count){var removeCount=$scope.course.questions.length-$scope.course.question_count;$scope.course.questions.splice($scope.course.question_count,removeCount)}else for(var i=$scope.course.questions.length-1;i<$scope.course.question_count;i++)$scope.course.questions[i]={index:i,name:"Question "+(i+1)}},$scope.updateAnswerNumber=function(question){if(null==question.answers){question.answers=[];for(i=0;i<question.answer_count;i++)question.answers[i]={index:i,title:""}}else if(question.answers.length>=question.answer_count){var removeCount=question.answers.length-question.answer_count;question.answers.splice(question.answer_count,removeCount)}else for(var i=question.answers.length-1;i<question.answer_count;i++)question.answers[i]={index:i,title:""}},$scope.changeMediaType=function(question){console.log(question.media_type)},$scope.changedVideo=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),question_index=obj.getAttribute("id").replace("video","");console.log(fileUrl),console.log(question_index);var tagId="media_video"+question_index,video=document.getElementById(tagId);document.getElementById(tagId).setAttribute("src",fileUrl),video.load(),video.play()},$scope.changedPDF=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),tagId="media_pdf"+obj.getAttribute("id").replace("pdf","");document.getElementById(tagId).setAttribute("src",fileUrl),console.log(fileUrl)},$scope.changedPPT=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),tagId="media_ppt"+obj.getAttribute("id").replace("ppt","");document.getElementById(tagId).setAttribute("src",fileUrl),console.log(fileUrl)},$scope.changedImage=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),index=obj.getAttribute("id").replace("image",""),items=index.split("_"),tagId=(items[0],items[1],"image_view"+index);document.getElementById(tagId).setAttribute("src",fileUrl);var removeTagId="remove_image"+index;document.getElementById(removeTagId).setAttribute("class","close remove-image-button show")},$scope.removeImage=function(question,index){var question_index=question.index,tagId="image_view"+index+"_"+question_index;document.getElementById(tagId).setAttribute("src","");var removeTagId="remove_image"+index+"_"+question_index;document.getElementById(removeTagId).setAttribute("class","close remove-image-button");var inputTagId="image"+index+"_"+question_index;document.getElementById(inputTagId).value=""}}]),app.controller("AllocCourseController",["$scope","$rootScope","cookie","hrmAPIservice","$routeParams",function($scope,$rootScope,cookie,hrmAPIservice,$routeParams){function goBack(){location.href="#/allocatetraining"}var userData=cookie.checkLoggedIn();cookie.getPermissions(),console.log(userData),$scope.pageTitle="Alloc Course",$scope.course_keyword="",$scope.alloc_course={course_id:"",course_supervisor:"",course_description:"",employee_id:"",alloc_date:"",expire_hours:0,is_sending_email:!0,status:0,user_id:userData.id},$scope.show_expire_date_field=!1,$scope.alloc_date_type="now",$scope.course_list=[],$scope.course={},$scope.user_name_list=[],$scope.user_list=[],$scope.employee_list=[],$scope.employee={},hrmAPIservice.getCourseData(userData.id).then(function(response){var courses=response.data.courses;$scope.course_list=courses,hrmAPIservice.getEmployeeList(userData.id).then(function(response){var users=response.data.users;for(i=0;i<users.length;i++){var user=users[i];user.name=user.firstname+" "+user.lastname}$scope.employee_list=users})}),$scope.getCourse=function(){angular.forEach($scope.course_list,function(obj,key){$scope.course.course_id==obj.course_id&&($scope.alloc_course.course_description=obj.course_description)})},$scope.doChangeCourseSuperior=function(typedthings){null!=typedthings&&typedthings.length>0&&hrmAPIservice.searchUser(typedthings).then(function(response){console.log(response);var users=response.data.users;$scope.user_list=users;for(var names=[],i=0;i<$scope.user_list.length;i++){var username=users[i].username,firstname=users[i].firstname,lastname=users[i].lastname;names[i]=firstname+" "+lastname+"("+username+")"}$scope.user_name_list=names})},$scope.doSelectedCourseSuperior=function(suggestion){console.log("Course Superior selected: "+suggestion);var array=suggestion.split("("),name=array[0],username=array[1];$scope.course_supervior=name,username=username.replace(")",""),console.log(username);for(var i=0;i<$scope.user_list.length;i++){var user=$scope.user_list[i];if(user.username==username){$scope.alloc_course.course_supervisor=user.id;break}}},$scope.doSelectedEmployee=function(suggestion){var array=suggestion.split("("),name=array[0],username=array[1];$scope.employee_name=name,username=username.replace(")",""),console.log(username);for(var i=0;i<$scope.user_list.length;i++){var user=$scope.user_list[i];if(user.username==username){$scope.alloc_course.employee_id=user.id;break}}},$scope.expire_hours={availableOptions:[{value:"24",title:"24 hours"},{value:"48",title:"48 hours"},{value:"72",title:"72 hours"},{value:120,title:"5 days"},{value:168,title:"7 days"},{value:336,title:"14 days"},{value:504,title:"21 days"},{value:672,title:"28 days"}],selectedOption:{value:"24",title:"24 hours"}},$scope.changedEnterDate=function(){"enter_date"==$scope.alloc_date_type?$scope.show_expire_date_field=!0:$scope.show_expire_date_field=!1},$scope.save=function(){if(null!=$scope.course&&""!=$scope.course&&null!=$scope.course.course_id)if(null!=$scope.alloc_course.course_supervisor&&""!=$scope.alloc_course.course_supervisor)if(null!=$scope.alloc_course.course_description&&""!=$scope.alloc_course.course_description)if(null!=$scope.employee&&""!=$scope.employee&&null!=$scope.employee.id){if("now"==$scope.alloc_date_type){var date=new Date,alloc_date=date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate()+" "+date.getHours()+":"+date.getMinutes()+":"+date.getSeconds();$scope.alloc_course.alloc_date=alloc_date}else $scope.alloc_course.alloc_date=$scope.enter_alloc_date;$scope.alloc_course.expire_hours=$scope.expire_hours.selectedOption.value,$scope.alloc_course.course_id=$scope.course.course_id,$scope.alloc_course.employee_id=$scope.employee.id,console.log("allocCourse request"),hrmAPIservice.allocCourse($scope.alloc_course).then(function(response){console.log("Alloc Course: ",response),goBack()})}else alert("Please Choose Employee.");else alert("Please type Course Description.");else alert("Please Choose Course Supervisor.");else alert("Please Choose Course.")},$scope.cancel=function(){goBack()}}]),app.controller("AllocTrainingListController",["$scope","$rootScope","cookie","hrmAPIservice","$routeParams",function($scope,$rootScope,cookie,hrmAPIservice,$routeParams){function filterAllocCourseData(alloc_courses){for(var courses=[],i=0;i<alloc_courses.length;i++){var item=alloc_courses[i],status=item.status;if(1==status){item.course_status="Completed",item.status_class="green";var completed_date=new Date(item.completed_date),completed_string=completed_date.getDate()+"/"+(completed_date.getMonth()+1)+"/"+completed_date.getFullYear();item.days_remain=completed_string}else if(0==status){var alloc_date=item.alloc_date,expire_hours=item.expire_hours,date1=dateAdd(date1=new Date(alloc_date),expire_hours,"hours"),date2=new Date,timeDiff=date1.getTime()-date2.getTime(),diffDays=Math.ceil(timeDiff/864e5);item.days_remain=diffDays,diffDays>=0?(item.course_status="Pending",item.status_class="blue"):(item.course_status="Overdue",item.status_class="red")}courses[i]=item}$scope.alloc_courses=courses}function dateAdd(original,increment,unit){if(original instanceof Date)switch(unit){case"seconds":return(newDate=new Date(original)).setTime(original.getTime()+1e3*increment),newDate;case"minutes":return(newDate=new Date(original)).setTime(original.getTime()+1e3*increment*60),newDate;case"hours":return(newDate=new Date(original)).setTime(original.getTime()+1e3*increment*60*60),newDate;case"days":return(newDate=new Date(original)).setDate(original.getDate()+increment),newDate;case"weeks":return(newDate=new Date(original)).setDate(original.getDate()+7*increment),newDate;case"months":var oldDate=original.getDate();return(newDate=new Date(original)).setMonth(original.getMonth()+increment),newDate.getDate()!=oldDate&&newDate.setDate(0),29!=original.getDate()||isLeapYear(newDate.getFullYear())||(newDate.setMonth(1),newDate.setDate(28)),newDate;case"years":return(newDate=new Date(original)).setFullYear(original.getFullYear()+increment),29!=original.getDate()||isLeapYear(newDate.getFullYear())||(newDate.setMonth(1),newDate.setDate(28)),newDate;default:var newDate=new Date(original);return newDate.setTime(original.getTime()+increment),newDate}}function isLeapYear(year){return year%4==0&&year%100!=0||year%400==0}var userData=cookie.checkLoggedIn();cookie.getPermissions(),console.log(userData),$scope.pageTitle="Allocate Training.",$scope.alloc_courses=[],$scope.showModal=!1,$scope.sort=function(keyname){$scope.sortKey=keyname,$scope.reverse=!$scope.reverse},hrmAPIservice.getAllocCourseData(userData.id).then(function(response){console.log("Get Alloc Course Data: ",response.data.alloc_courses),filterAllocCourseData(response.data.alloc_courses)}),$scope.allocCourse=function(){console.log("allocCourse"),location.href="#/alloc_course"},$scope.removeAllocCourse=function(course){$scope.showModal=!0,selectedCourse=course},$scope.remove=function(){$scope.showModal=!1,null!=selectedCourse&&hrmAPIservice.delAllocCourse(selectedCourse.id,userData.id).then(function(response){filterAllocCourseData(response.data.alloc_courses)})},$scope.cancel=function(){$scope.showModal=!1},$scope.editAllocCourse=function(course){location.href="#/edit_alloc_course/"+course.id}}]),app.controller("contactusController",["$scope","$rootScope","cookie",function($scope,$rootScope,cookie){cookie.checkLoggedIn(!0);$rootScope.showHeader=0}]),app.controller("dashboardController",["$scope","$rootScope","cookie",function($scope,$rootScope,cookie){cookie.checkLoggedIn();cookie.getPermissions(),$scope.GoBack=function(){$location.path("/")}}]),app.run(function($rootScope){$rootScope.typeOf=function(value){return typeof value}}).directive("stringToNumber",function(){return{require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel.$parsers.push(function(value){return""+value}),ngModel.$formatters.push(function(value){return parseFloat(value)})}}}).config(function($mdDateLocaleProvider){$mdDateLocaleProvider.formatDate=function(date){if(!date)return"";var d=new Date(date),dd=d.getDate()<10?"0"+d.getDate():d.getDate(),m=d.getMonth()+1;return dd+"-"+(m<10?"0"+m:m)+"-"+d.getFullYear()}}).directive("hrmContent",function(){return{template:'<div id="wrapper"><div class="content"><div class="content-inside" ng-view></div></div><footer ng-include="\'assets/templates/_footer.html\'"></footer></div>'}}).directive("empField",function(){return{retrict:"A",scope:{fldLabel:"@",fldType:"@",model:"=ngModel",required:"=ngRequired"},template:`<div class="form-group row">\n                        <label class="control-label col-sm-4">{{fldLabel}}</label>\n                        <div class="col-sm-8">\n                            <input type="{{fldType}}" class="form-control" ng-model="model" ng-required="required" />\n                            <span style="display:none;" class="text-danger"></span>\n                        </div>\n                    </div>`,link:function(scope,element,attrs){angular.isUndefined(scope.fldType)&&(scope.fldType="text")}}}).directive("userMessage",function(){return{scope:{obj:"="},template:'<div class="user-message">{{ obj.userMessage }}</div>'}}),app.controller("docourseController",["$scope","$rootScope","cookie","hrmAPIservice","$routeParams",function($scope,$rootScope,cookie,hrmAPIservice,$routeParams){cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="Course",$scope.course={},$scope.answer={},$scope.course.step=1,$scope.question_id=0,$scope.questionIndex=0;var courseId=$routeParams.courseid,employeeId=$routeParams.employeeid;$scope.findCurrentQuestion=function(){for(var n=0;n<$scope.course.questions.length;)$scope.course.questions[n].isAnswered>0&&$scope.questionIndex++,n++},hrmAPIservice.getCourseById(courseId,employeeId).then(function(response){$scope.course.coursetitle=response.data.course.course_name,$scope.course.coursedescription=response.data.course.course_description,$scope.course.learnersname=response.data.employee.employee.firstname+" "+response.data.employee.employee.lastname,$scope.course.hoursleft=response.data.course.TimeLeft,$scope.course.tradingname=response.data.course.department,$scope.course.questions=response.data.course.questions,$scope.findCurrentQuestion(),$scope.question_id=$scope.course.questions[$scope.questionIndex].question_id}),$scope.courseproceed=function(){$scope.course.step=2},$scope.back=function(){$scope.course.step--},$scope.next=function(){$scope.course.step++},$scope.submitAnswer=function(questionId){var answerId=$scope.answer[questionId];0!=answerId&&hrmAPIservice.submitAnswer(courseId,employeeId,questionId,answerId).then(function(response){$scope.questionIndex++,$scope.questionIndex>=$scope.course.questions.length?($scope.result=response.data,$scope.course.step="complete"):$scope.question_id=$scope.course.questions[$scope.questionIndex].question_id})}}]),app.controller("EditAllocCourseController",["$scope","$rootScope","cookie","hrmAPIservice","$routeParams",function($scope,$rootScope,cookie,hrmAPIservice,$routeParams){function goBack(){location.href="#/allocatetraining"}var userData=cookie.checkLoggedIn();cookie.getPermissions(),console.log(userData),$scope.pageTitle="Edit Alloc Course",$scope.course_keyword="",$scope.alloc_course_id=$routeParams.id,$scope.alloc_course={course_id:"",course_supervisor:"",course_description:"",employee_id:"",alloc_date:"",expire_hours:0,is_sending_email:!0,status:0,user_id:userData.id},$scope.expire_hours={availableOptions:[{value:"24",title:"24 hours"},{value:"48",title:"48 hours"},{value:"72",title:"72 hours"},{value:120,title:"5 days"},{value:168,title:"7 days"},{value:336,title:"14 days"},{value:504,title:"21 days"},{value:672,title:"28 days"}],selectedOption:{value:"24",title:"24 hours"}},$scope.show_expire_date_field=!0,$scope.alloc_date_type="enter_date",$scope.course_name_list=[],$scope.course_list=[],$scope.user_name_list=[],$scope.user_list=[],hrmAPIservice.getAllocCourseById($scope.alloc_course_id).then(function(response){for(console.log("get course = ",response.data.alloc_course),$scope.alloc_course=response.data.alloc_course,$scope.course_name=$scope.alloc_course.course.course_name,$scope.enter_alloc_date=new Date($scope.alloc_course.alloc_date),$scope.course_supervior=$scope.alloc_course.supervisor_user.firstname+" "+$scope.alloc_course.supervisor_user.lastname,$scope.employee_name=$scope.alloc_course.employee_user.firstname+" "+$scope.alloc_course.employee_user.lastname,i=0;i<$scope.expire_hours.availableOptions.length;i++){var item=$scope.expire_hours.availableOptions[i];if(item.value==$scope.alloc_course.expire_hours){$scope.expire_hours.selectedOption=item;break}}}),$scope.doChangeCourseName=function(typedthings){null!=typedthings&&typedthings.length>0&&hrmAPIservice.searchCourse(typedthings).then(function(response){var courses=response.data.courses;$scope.course_list=courses;for(var names=[],i=0;i<$scope.course_list.length;i++){var course_name=courses[i].course_name,course_id=courses[i].course_id;names[i]=course_id+". "+course_name}$scope.course_name_list=names})},$scope.doSelectedCourseName=function(suggestion){console.log("Suggestion selected: "+suggestion);var array=suggestion.split(". ");$scope.alloc_course.course_id=array[0],$scope.course_name=array[1]},$scope.doChangeCourseSuperior=function(typedthings){null!=typedthings&&typedthings.length>0&&hrmAPIservice.searchUser(typedthings).then(function(response){console.log(response);var users=response.data.users;$scope.user_list=users;for(var names=[],i=0;i<$scope.user_list.length;i++){var username=users[i].username,firstname=users[i].firstname,lastname=users[i].lastname;names[i]=firstname+" "+lastname+"("+username+")"}$scope.user_name_list=names})},$scope.doSelectedCourseSuperior=function(suggestion){console.log("Course Superior selected: "+suggestion);var array=suggestion.split("("),name=array[0],username=array[1];$scope.course_supervior=name,username=username.replace(")",""),console.log(username);for(var i=0;i<$scope.user_list.length;i++){var user=$scope.user_list[i];if(user.username==username){$scope.alloc_course.course_supervisor=user.id;break}}},$scope.doSelectedEmployee=function(suggestion){var array=suggestion.split("("),name=array[0],username=array[1];$scope.employee_name=name,username=username.replace(")",""),console.log(username);for(var i=0;i<$scope.user_list.length;i++){var user=$scope.user_list[i];if(user.username==username){$scope.alloc_course.employee_id=user.id;break}}},$scope.changedEnterDate=function(){"enter_date"==$scope.alloc_date_type?$scope.show_expire_date_field=!0:$scope.show_expire_date_field=!1},$scope.save=function(){if(null!=$scope.alloc_course.course_id&&""!=$scope.alloc_course.course_id)if(null!=$scope.alloc_course.course_supervisor&&""!=$scope.alloc_course.course_supervisor)if(null!=$scope.alloc_course.course_description&&""!=$scope.alloc_course.course_description)if(null!=$scope.alloc_course.employee_id&&""!=$scope.alloc_course.employee_id){if("now"==$scope.alloc_date_type){var date=new Date,alloc_date=date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate()+" "+date.getHours()+":"+date.getMinutes()+":"+date.getSeconds();$scope.alloc_course.alloc_date=alloc_date}else $scope.alloc_course.alloc_date=$scope.enter_alloc_date;$scope.alloc_course.expire_hours=$scope.expire_hours.selectedOption.value,console.log($scope.alloc_course),hrmAPIservice.updateAllocCourse($scope.alloc_course).then(function(response){console.log("Alloc Course: ",response),goBack()})}else alert("Please Choose Employee.");else alert("Please type Course Description.");else alert("Please Choose Course Supervisor.");else alert("Please Choose Course.")},$scope.cancel=function(){goBack()}}]),app.controller("EditCourseController",["$scope","$rootScope","cookie","hrmAPIservice","$routeParams",function($scope,$rootScope,cookie,hrmAPIservice,$routeParams){function goBack(){location.href="#/trainingcourses"}var userData=cookie.checkLoggedIn(),courseCategory=[];cookie.getPermissions(),$scope.pageTitle="Edit Course",$scope.course_id=$routeParams.id,$scope.course={};$scope.isAdmin=17==userData.usertype_id,$scope.questionNumbers=[],$scope.answerNumbers=[],$scope.status={isCustomHeaderOpen:!1,isFirstOpen:!0,isFirstDisabled:!1};for(i=0;i<30;i++)$scope.questionNumbers[i]=i+1;for(var i=0;i<5;i++)$scope.answerNumbers[i]=i+1;hrmAPIservice.getCourseCategory().then(function(response){response.data.course_category.forEach(function(element,index){var temp='{ "value" : "'+response.data.course_category[index].course_category_name+'", "label" : "'+response.data.course_category[index].course_category_name+'", "id" : "'+response.data.course_category[index].course_category_id+'" }';response.data.course_category[index].course_category_id,response.data.course_category[index].course_category_name;courseCategory.push(JSON.parse(temp))}),$scope.course_category=courseCategory}),hrmAPIservice.getCourse($scope.course_id,userData).then(function(response){var course=response.data.course,auto_inactive_time=course.auto_inactive_time;if(course.auto_inactive_time=new Date(auto_inactive_time),$scope.course=course,$scope.course.question_count=$scope.course.questions.length,null!=$scope.course.questions&&$scope.course.questions.length>0)for(var i=0;i<$scope.course.questions.length;i++)$scope.course.questions[i].answer_count=$scope.course.questions[i].answers.length;console.log($scope.course)}),$scope.saveCourse=function(){hrmAPIservice.saveCourse($scope.course).then(function(response){console.log("Save Course: ",response),0==response.data.success&&goBack()})},$scope.cancel=function(){goBack()},$scope.updateQuestionNumber=function(){if(null==$scope.course.questions){$scope.course.questions=[];for(i=0;i<$scope.course.question_count;i++)$scope.course.questions[i]={question_id:i+"_new",name:"Question "+(i+1)}}else if($scope.course.questions.length>=$scope.course.question_count){var removeCount=$scope.course.questions.length-$scope.course.question_count;$scope.course.questions.splice($scope.course.question_count,removeCount)}else for(var i=$scope.course.questions.length;i<$scope.course.question_count;i++)$scope.course.questions[i]={question_id:i+"_new",name:"Question "+(i+1)}},$scope.updateAnswerNumber=function(question){if(null==question.answers){question.answers=[];for(i=0;i<question.answer_count;i++)question.answers[i]={answer_id:i+"_new",title:""}}else if(question.answers.length>=question.answer_count){var removeCount=question.answers.length-question.answer_count;question.answers.splice(question.answer_count,removeCount)}else for(var i=question.answers.length;i<question.answer_count;i++)question.answers[i]={answer_id:i+"_new",title:""}},$scope.changeMediaType=function(question){console.log(question.media_type)},$scope.changedVideo=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),question_index=obj.getAttribute("id").replace("video","");console.log(fileUrl),console.log(question_index);var tagId="media_video"+question_index,video=document.getElementById(tagId);document.getElementById(tagId).setAttribute("src",fileUrl),video.load(),video.play()},$scope.changedPDF=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),tagId="media_pdf"+obj.getAttribute("id").replace("pdf","");document.getElementById(tagId).setAttribute("src",fileUrl),console.log(fileUrl)},$scope.changedPPT=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),tagId="media_ppt"+obj.getAttribute("id").replace("ppt","");document.getElementById(tagId).setAttribute("src",fileUrl),console.log(fileUrl)},$scope.changedImage=function(obj){var fileUrl=window.URL.createObjectURL(obj.files[0]),index=obj.getAttribute("id").replace("image","");console.log("index = ",index);var items=index.split("-"),image_index=items[0],question_index=items[1],tagId="image_view"+image_index+"-"+question_index;console.log(tagId),document.getElementById(tagId).setAttribute("src",fileUrl);var removeTagId="remove_image"+image_index+"-"+question_index;document.getElementById(removeTagId).setAttribute("class","close remove-image-button show")},$scope.removeImage=function(question,index){var question_id=question.question_id,tagId="image_view"+index+"-"+question_id;document.getElementById(tagId).setAttribute("src","");var removeTagId="remove_image"+index+"-"+question_id;document.getElementById(removeTagId).setAttribute("class","close remove-image-button");var inputTagId="image"+index+"-"+question_id;document.getElementById(inputTagId).value="";var array_images=question.image.split(",");0==index?null!=array_images&&array_images.length>=1&&(array_images[0]=""):1==index?null!=array_images&&array_images.length>=2&&(array_images[1]=""):2==index&&null!=array_images&&array_images.length>=3&&(array_images[2]=""),question.image=array_images.join(",")}}]),app.controller("EditHrmUserController",["$scope","$rootScope","cookie","uiGridConstants","hrmAPIservice","$routeParams",function($scope,$rootScope,cookie,uiGridConstants,hrmAPIservice,$routeParams){function goBack(){location.href="#/hrmusers"}var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="Edit User",$scope.user_id=$routeParams.id,$scope.user={},$scope.stateList={availableOptions:[],selectedOption:{}},$scope.roleList={availableOptions:[],selectedOption:{}},$scope.doReleaseLockout=function(){hrmAPIservice.releaseLock($scope.user_id).then(function(response){$scope.userMessage=response.data.message})},hrmAPIservice.getUserGlobalData().then(function(response){$scope.stateList.availableOptions=response.data.states,$scope.roleList.availableOptions=response.data.roles,hrmAPIservice.getUserById($scope.user_id).then(function(response){var user=response.data.user;user.password=user.public_password;var dob=user.dob;user.dob=new Date(dob);for(var state=user.state,i=0;i<$scope.stateList.availableOptions.length;i++)if(state==(item=$scope.stateList.availableOptions[i]).id){$scope.stateList.selectedOption=item;break}for(var usertype_id=user.usertype_id,i=0;i<$scope.roleList.availableOptions.length;i++){var item=$scope.roleList.availableOptions[i];if(usertype_id==item.id){$scope.roleList.selectedOption=item;break}}$scope.user=user,console.log($scope.user)})}),$scope.save=function(){console.log("save"),console.log("valid: ",$scope.user_form.$valid),console.log("user: ",$scope.user),$scope.user_form.$valid&&($scope.user.state=$scope.stateList.selectedOption.id,$scope.user.usertype_id=$scope.roleList.selectedOption.id,hrmAPIservice.updateUser($scope.user,userData).then(function(response){console.log("Update User: ",response),0==response.data.success?alert(response.data.message):goBack()}))},$scope.cancel=function(){goBack()}}]),app.controller("employeeController",["$scope","$rootScope","cookie","uiGridConstants","hrmAPIservice",function($scope,$rootScope,cookie,uiGridConstants,hrmAPIservice){var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="Employees Details",$scope.formEnabled=0,$scope.employees={},$scope.emp={},$scope.empwork={},$scope.gridOptionsComplex={enableFiltering:!0,showGridFooter:!1,showColumnFooter:!1,onRegisterApi:function(registeredApi){gridApi=registeredApi},columnDefs:[{name:"id",visible:!1},{name:"name",width:"20%"},{name:"telephone",width:"10%",cellClass:"center"},{name:"email",width:"15%",enableFiltering:!0,cellClass:"center"},{name:"StateName",width:"15%",cellClass:"center"},{name:"gender",filter:{term:""},width:"10%",enableCellEdit:!1,cellClass:function(grid,row,col,rowRenderIndex,colRenderIndex){return"Male"===grid.getCellValue(row,col)?"center blue":"Female"===grid.getCellValue(row,col)?"center green":void 0}},{name:"status",width:"20%",enableFiltering:!1,cellClass:"center",cellTemplate:'<button class="btn btn-sm" ng-class="{\'btn-success\': row.entity.active == 1, \'btn-default\': row.entity.active == 0 }" style="margin-right: 0; border-top-right-radius: 0; border-bottom-right-radius: 0; " ng-click="grid.appScope.activateEmployee(row.entity,1)">Active</button><button class="btn btn-sm btn-default" ng-class="{\'btn-success\': row.entity.active == 0, \'btn-default\': row.entity.active == 1 }" ng-click="grid.appScope.activateEmployee(row.entity,0)" style="border-top-left-radius: 0; border-bottom-left-radius: 0;">Inactive</button></a>'},{name:"action",enableFiltering:!1,width:"10%",cellClass:"center",cellTemplate:'<div class="ui-grid-cell-contents"><i class="fa fa-edit fa-2x" ng-click="grid.appScope.editEmployee(row.entity)"></i><i class="fa fa-trash-o fa-2x text-danger" ng-click="grid.appScope.deleteEmployee(row.entity)"></i></div>'}]},$scope.deleteEmployee=function(empDetail){confirm("Delete employee "+empDetail.firstname+" "+empDetail.lastname+"? Are you sure?")&&hrmAPIservice.delete(empDetail,userData,"employee").then(function(response){$scope.gridOptionsComplex.data=response.data.employees})},$scope.newEmployee=function(){$scope.empform.$setPristine(),$scope.emp.id=0,$scope.emp.account_id=userData.account_id,$scope.emp.added_by=userData.id,$scope.emp.update_by=0,$scope.formEnabled=1},$scope.clearForm=function(){$scope.emp={},$scope.empwork={},$scope.formEnabled=0};var setDate=function(date){var a=date.split("-");return new Date(a[0],a[1]-1,a[2])};$scope.editEmployee=function(empDetail){hrmAPIservice.get(empDetail.id,"employee").then(function(response){$scope.emp=response.data.employee,$scope.emp.dob=setDate($scope.emp.dob),$scope.emp.visaexpiry=setDate($scope.emp.visaexpiry),$scope.empwork=response.data.employee,$scope.emp.start_date=setDate($scope.emp.start_date),$scope.emp.end_date=setDate($scope.emp.end_date),$scope.formEnabled=1,$scope.emp.update_by=userData.id})},$scope.activateEmployee=function(row,status){hrmAPIservice.activateEmployee(row.id,status).then(function(response){hrmAPIservice.getEmployeeData(userData).then(function(response){$scope.gridOptionsComplex.data=response.data.employees})})},hrmAPIservice.getEmployeeData(userData).then(function(response){$scope.gridOptionsComplex.data=response.data.employees,$scope.countryList=response.data.countries,$scope.stateList=response.data.states,$scope.personList=response.data.persontype}),$scope.saveEmployee=function(){hrmAPIservice.saveEmployee($scope.emp,$scope.empwork,userData).then(function(response){$scope.gridOptionsComplex.data=response.data.employees,$scope.emp={},$scope.empwork={},$scope.formEnabled=0})}}]),app.controller("forgotpasswordController",["$scope","hrmAPIservice",function($scope,hrmAPIservice){$scope.userMessage="",$scope.showMessage=0,$scope.showHeader=0,$scope.isLoggedin=0,$scope.doChangePassword=function(){$scope.userMessage="",hrmAPIservice.forgotPassword($scope.email).then(function(response){$scope.showMessage=1,$scope.success=response.data.success,$scope.userMessage=response.data.message})},$scope.GoBack=function(){$location.path("/")}}]),app.controller("hrmusersController",["$scope","$rootScope","cookie","uiGridConstants","hrmAPIservice",function($scope,$rootScope,cookie,uiGridConstants,hrmAPIservice){function filterUserList(users){for(var i=0;i<users.length;i++)for(var item=users[i],usertype_id=item.usertype_id,j=0;j<$scope.roleList.length;j++){var role=$scope.roleList[j];if(role.id==usertype_id){item.role=role.display_text;break}}$scope.users=users}var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="User Details",$scope.users=[],$scope.roleList=[],$scope.formEnabled=0,$scope.user={},hrmAPIservice.getUserData(userData,1).then(function(response){console.log("Get User Data: ",response),users=response.data.users,$scope.roleList=response.data.roles,filterUserList(users)}),$scope.gridOptionsComplex={enableFiltering:!0,showGridFooter:!1,showColumnFooter:!1,onRegisterApi:function(registeredApi){gridApi=registeredApi},columnDefs:[{name:"id",visible:!1},{name:"name",width:"20%"},{name:"username",width:"10%",cellClass:"center"},{name:"email",width:"25%",enableFiltering:!0,cellClass:"center"},{name:"UserRole",width:"15%",cellClass:"center"},{name:"status",width:"20%",enableFiltering:!1,cellClass:"center",cellTemplate:'<button class="btn btn-sm" ng-class="{\'btn-success\': row.entity.active == 1, \'btn-default\': row.entity.active == 0 }" style="margin-right: 0; border-top-right-radius: 0; border-bottom-right-radius: 0; " ng-click="grid.appScope.activateUser(row.entity,1)">Active</button><button class="btn btn-sm btn-default" ng-class="{\'btn-success\': row.entity.active == 0, \'btn-default\': row.entity.active == 1 }" ng-click="grid.appScope.activateUser(row.entity,0)" style="border-top-left-radius: 0; border-bottom-left-radius: 0;">Inactive</button></a>'},{name:"action",enableFiltering:!1,width:"10%",cellClass:"center",cellTemplate:'<div class="ui-grid-cell-contents"><i class="fa fa-edit fa-2x" ng-click="grid.appScope.editUser(row.entity)"></i><i class="fa fa-trash-o fa-2x text-danger" ng-click="grid.appScope.deleteUser(row.entity)"></i></div>'}]},hrmAPIservice.getUsers(userData).then(function(response){$scope.gridOptionsComplex.data=response.data}),$scope.sort=function(keyname){$scope.sortKey=keyname,$scope.reverse=!$scope.reverse},hrmAPIservice.getRoles().then(function(response){for(var roles=[],i=0;i<response.data.length;i++){var item=response.data[i];"Administrator"!=item.value&&(roles[roles.length]=item)}$scope.userroles=roles}),$scope.deleteUser=function(user){confirm("Delete user "+user.firstname+" "+user.lastname+"? Are you sure?")&&hrmAPIservice.delete(user,userData,"user").then(function(response){$scope.gridOptionsComplex.data=response.data})},$scope.newUser=function(){$scope.formEnabled=1,$scope.user.state="0"},$scope.editUser=function(user){$scope.formEnabled=1,$scope.user.state="0",hrmAPIservice.get(user.id,"user").then(function(response){$scope.user=response.data.user;var date=response.data.user.dob.split("-"),d=new Date(date[1]+"-"+date[0]+"-"+date[2]);$scope.user.dob=new Date(d.getFullYear(),d.getMonth(),d.getDate(),0,0,0)})},$scope.activateUser=function(row,status){hrmAPIservice.activateUser(row.id,status).then(function(response){hrmAPIservice.getUsers(userData).then(function(response){$scope.gridOptionsComplex.data=response.data})})},$scope.saveUser=function(){hrmAPIservice.saveUser($scope.user,userData,1).then(function(response){0==response.data.success?($scope.showMessage=1,$scope.success=response.data.success,$scope.userMessage=response.data.message):($scope.gridOptionsComplex.data=response.data.users,$scope.showMessage=1,$scope.success=response.data.success,$scope.userMessage=response.data.message,$scope.user={},$scope.formEnabled=0)})}}]),app.controller("hrmusersController",["$scope","$rootScope","cookie","uiGridConstants","hrmAPIservice",function($scope,$rootScope,cookie,uiGridConstants,hrmAPIservice){var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="User Details",$scope.formEnabled=0,$scope.users={},$scope.user={},$scope.orig={},$scope.gridOptionsComplex={enableFiltering:!0,showGridFooter:!1,showColumnFooter:!1,onRegisterApi:function(registeredApi){gridApi=registeredApi},columnDefs:[{name:"id",visible:!1},{name:"name",width:"20%"},{name:"telephone",width:"10%",cellClass:"center"},{name:"email",width:"15%",enableFiltering:!0,cellClass:"center"},{name:"StateName",width:"15%",cellClass:"center"},{name:"gender",filter:{term:""},width:"10%",enableCellEdit:!1,cellClass:function(grid,row,col,rowRenderIndex,colRenderIndex){return"Male"===grid.getCellValue(row,col)?"center blue":"Female"===grid.getCellValue(row,col)?"center green":void 0}},{name:"status",width:"20%",enableFiltering:!1,cellClass:"center",cellTemplate:'<button class="btn btn-sm" ng-class="{\'btn-success\': row.entity.active == 1, \'btn-default\': row.entity.active == 0 }" style="margin-right: 0; border-top-right-radius: 0; border-bottom-right-radius: 0; " ng-click="grid.appScope.activateUser(row.entity,1)">Active</button><button class="btn btn-sm btn-default" ng-class="{\'btn-success\': row.entity.active == 0, \'btn-default\': row.entity.active == 1 }" ng-click="grid.appScope.activateUser(row.entity,0)" style="border-top-left-radius: 0; border-bottom-left-radius: 0;">Inactive</button></a>'},{name:"action",enableFiltering:!1,width:"10%",cellClass:"center",cellTemplate:'<div class="ui-grid-cell-contents"><i class="fa fa-edit fa-2x" ng-click="grid.appScope.editUser(row.entity)"></i><i class="fa fa-trash-o fa-2x text-danger" ng-click="grid.appScope.deleteUser(row.entity)"></i></div>'}]},$scope.deleteUser=function(user){confirm("Delete user "+user.firstname+" "+user.lastname+"? Are you sure?")&&hrmAPIservice.delete(user,userData,"user").then(function(response){hrmAPIservice.getUserData(userData,1).then(function(response){$scope.gridOptionsComplex.data=response.data.users})})},$scope.newUser=function(){alert("sdfs"),$scope.orig={},$scope.userform.$setPristine(),$scope.user.id=0,$scope.user.account_id=0,$scope.user.added_by=userData.id,$scope.user.update_by=0,$scope.formEnabled=1},$scope.clearForm=function(){$scope.user={},$scope.formEnabled=0};var setDate=function(date){if("0000-00-00"==date||!date)return"";var a=date.split("-");return new Date(a[0],a[1]-1,a[2])};$scope.editUser=function(userDetail){$scope.orig={},hrmAPIservice.get(userDetail.id,"user").then(function(response){$scope.user=response.data.user,$scope.orig=angular.copy(response.data.user),$scope.formEnabled=1,$scope.user.dob=setDate($scope.user.dob),$scope.user.update_by=userData.id})},$scope.activateUser=function(row,status){hrmAPIservice.activateUser(row.id,status).then(function(response){hrmAPIservice.getUserData(userData,1).then(function(response){$scope.gridOptionsComplex.data=response.data.users})})},hrmAPIservice.getUserData(userData,1).then(function(response){$scope.gridOptionsComplex.data=response.data.users,$scope.countryList=response.data.countries,$scope.stateList=response.data.states,$scope.personList=response.data.persontype,$scope.roleList=response.data.roles}),$scope.saveUser=function(){alert("save"),hrmAPIservice.saveUser($scope.user,userData,1).then(function(response){0==response.data.success?($scope.showMessage=1,$scope.success=response.data.success,$scope.userMessage=response.data.message):($scope.gridOptionsComplex.data=response.data.users,$scope.user={},$scope.formEnabled=0)})}}]),app.controller("indexController",["$scope","$rootScope","$location","$interval",function($scope,$rootScope,$location,$interval){$rootScope.showHeader=1,$scope.sitename="hr master",$scope.slogan="the HR professionals' best kept secret",$scope.showHeader=1,$scope.isLoggedin=0,$scope.MoreInfo=function(){$location.path("/moreinfo")},$scope.ForgotPassword=function(){$location.path("/forgotpassword")},$scope.ConfigureList=function(){$interval(function(){$("ul.container li:nth-child(2n)").css({color:"#333"})},100,1)},$scope.beginVertScroll=function(){$interval(function(){var firstElement=$("ul.container li:first"),hgt=firstElement.height()+parseInt(firstElement.css("paddingTop"),10)+parseInt(firstElement.css("paddingBottom"),10)+parseInt(firstElement.css("marginTop"),10)+parseInt(firstElement.css("marginBottom"),10),cntnt=firstElement.html(),c="<li>"+cntnt+"</li>";$("ul.container").append(c),cntnt="",firstElement.animate({marginTop:-hgt},600,function(){$scope.itemToremove=$(this),$("ul.container li").last().css({"height:":"200px",color:"#333"}),$(this).remove()})},3e4)}}]),app.directive("drctv",["$interval",function($interval){return{link:function($scope,$element,$attribute,$interval){$scope.ConfigureList(),$scope.beginVertScroll()}}}]),app.controller("loginController",["$scope","$rootScope","hrmAPIservice","$timeout","$location","cookie",function($scope,$rootScope,hrmAPIservice,$timeout,$location,cookie){$scope.showMessage=0,$scope.showHeader=0,$scope.perms={},$scope.login={},$scope.showHeader=0,$scope.isLoggedin=0,$scope.doLogin=function(){hrmAPIservice.doLogin($scope.login.email,$scope.login.password).then(function(response){if($scope.showMessage=1,$scope.success=response.data.success,0==response.data.success||angular.isUndefined(response.data.success))return $scope.login.userMessage=response.data.message,$scope.login.success=response.data.success,!1;$scope.login.userMessage="Success! Logging in..",$scope.login.success=1,cookie.setCookie("user",response.data.userdetail),cookie.setCookie("permissions",response.data.permissions),$timeout(function(){$timeout(function(){$location.path("/dashboard")},300)},1e3)})}}]),app.controller("logoutController",["cookie","$location","$rootScope",function(cookie,$location,$rootScope){cookie.deleteCookie("user"),cookie.deleteCookie("permissions"),$rootScope.isLoggedin=0,$location.path("/")}]),app.controller("moreinfoController",["$scope","$location",function($scope,$location){$scope.sitename="hr master",$scope.slogan="the HR professionals' best kept secret",$scope.submitEmail=function(){""!=$scope.email?alert("Your email address will be submitted once the functionality allows you to do such a thing."):alert("Enter an email address or perish!")},$scope.GoBack=function(){$location.path("/")}}]),app.controller("permissionsController",["$scope","$rootScope","$timeout","cookie","hrmAPIservice",function($scope,$rootScope,$timeout,cookie,hrmAPIservice){cookie.checkLoggedIn();cookie.getPermissions(),$scope.userrole=0,$scope.permissions={},$scope.permissions.read=[],$scope.permissions.write=[],$scope.permissions.delete=[],hrmAPIservice.getPermissionData().then(function(response){$scope.roles=response.data.roles,$scope.modules=response.data.modules}),$scope.updatePermissions=function(){$scope.permissions.read=[],$scope.permissions.write=[],$scope.permissions.delete=[],hrmAPIservice.getPermissions($scope.userrole).then(function(response){angular.forEach(response.data,function(obj,key){$scope.permissions.read[obj.module]=obj.read>0?1:0,$scope.permissions.write[obj.module]=obj.write>0?1:0,$scope.permissions.delete[obj.module]=obj.delete>0?1:0})})},$scope.savePermissions=function(){hrmAPIservice.savePermissions($scope.userrole,$scope.permissions).then(function(response){$scope.showMessage=1,$scope.success=1,$scope.userMessage="The permissions have been updated successfully",$timeout(function(){$timeout(function(){$scope.userMessage="",$scope.showMessage=0},1e3)},3e3)})}}]),app.controller("privacyController",["$scope","$rootScope","cookie",function($scope,$rootScope,cookie){cookie.checkLoggedIn(!0)}]),app.controller("resetpasswordController",["$scope","hrmAPIservice","$routeParams",function($scope,hrmAPIservice,$routeParams){$scope.showMessage=0,$scope.resetform={},$scope.showHeader=0,$scope.isLoggedin=0,$scope.showLinkerror=0,$scope.resetform.password="",$scope.resetform.confirmpassword="";var hash=angular.isDefined($routeParams.hash)?$routeParams.hash:"";hrmAPIservice.getEmailFromHash(hash).then(function(response){if(0==response.data.success)return $scope.showLinkerror=1,void($scope.userMessage=response.data.message);$scope.resetform.username=response.data.username}),$scope.doResetPassword=function(){if($scope.resetform.password!==$scope.resetform.confirmpassword)return $scope.showMessage=1,void($scope.userMessage="Confirm password does not match new password");hrmAPIservice.resetPassword($scope.resetform.username,$scope.resetform.password).then(function(response){$scope.showMessage=1,$scope.userMessage=response.data.message})},$scope.GoBack=function(){$location.path("/")},$scope.checkpasswordStength=function(e,pw){$scope.complexify({minimumChars:6,strengthScaleFactor:.7,pw:pw},function(valid,complexity){var calculated=complexity/100*268-134,prop="rotate("+calculated+"deg)";console.log(calculated);var msgTxt="";msgTxt=calculated<-85?"Weak":calculated<-28?"Fair":calculated<32?"Good":calculated<90?"Strong":"Excellent",$scope.userProgressMessage=msgTxt,$scope.arrowStyle={"-moz-transform":prop,"-webkit-transform":prop,"-o-transform":prop,"-ms-transform":prop,transform:prop}})},$scope.complexify=function(options,callback){var currPassword=options.pw,CHARSETS=[[48,57],[65,90],[97,122],[33,47],[58,64],[91,96],[123,126],[128,255],[256,383],[384,591],[592,687],[688,767],[768,879],[880,1023],[1024,1279],[1328,1423],[1424,1535],[1536,1791],[1792,1871],[1920,1983],[2304,2431],[2432,2559],[2560,2687],[2688,2815],[2816,2943],[2944,3071],[3072,3199],[3200,3327],[3328,3455],[3456,3583],[3584,3711],[3712,3839],[3840,4095],[4096,4255],[4256,4351],[4352,4607],[4608,4991],[5024,5119],[5120,5759],[5760,5791],[5792,5887],[6016,6143],[6144,6319],[7680,7935],[7936,8191],[8192,8303],[8304,8351],[8352,8399],[8400,8447],[8448,8527],[8528,8591],[8592,8703],[8704,8959],[8960,9215],[9216,9279],[9280,9311],[9312,9471],[9472,9599],[9600,9631],[9632,9727],[9728,9983],[9984,10175],[10240,10495],[11904,12031],[12032,12255],[12272,12287],[12288,12351],[12352,12447],[12448,12543],[12544,12591],[12592,12687],[12688,12703],[12704,12735],[12800,13055],[13056,13311],[13312,19893],[19968,40959],[40960,42127],[42128,42191],[44032,55203],[55296,56191],[56192,56319],[56320,57343],[57344,63743],[63744,64255],[64256,64335],[64336,65023],[65056,65071],[65072,65103],[65104,65135],[65136,65278],[65279,65279],[65280,65519],[65520,65533]],defaults={minimumChars:8,strengthScaleFactor:1};$.isFunction(options)&&!callback&&(callback=options,options={}),options=$.extend(defaults,options);for(var complexity=0,valid=!1,i=CHARSETS.length-1;i>=0;i--)complexity+=function(str,charset){for(var i=(str=angular.isUndefined(str)?"":str).length-1;i>=0;i--)if(charset[0]<=str.charCodeAt(i)&&str.charCodeAt(i)<=charset[1])return charset[1]-charset[0]+1;return 0}(currPassword,CHARSETS[i]);var pwLength=angular.isDefined(currPassword)?currPassword.length:0;valid=(complexity=Math.log(Math.pow(complexity,pwLength))*(1/options.strengthScaleFactor))>49&&pwLength>=options.minimumChars,complexity=(complexity=complexity/120*100)>100?100:complexity,callback.call(this,valid,complexity)}}]),app.controller("solutionController",["$scope","$rootScope","cookie","$anchorScroll","$routeParams",function($scope,$rootScope,cookie,$anchorScroll,$routeParams){cookie.checkLoggedIn(!0);$rootScope.showHeader=0,angular.isDefined($routeParams.anchor)&&$anchorScroll($routeParams.anchor)}]),app.controller("termsController",["$scope","$rootScope","cookie",function($scope,$rootScope,cookie){cookie.checkLoggedIn(!0)}]),app.controller("trademarksController",["$scope","$rootScope","cookie",function($scope,$rootScope,cookie){cookie.checkLoggedIn(!0)}]),app.controller("trainingController",["$scope","$rootScope","cookie","hrmAPIservice",function($scope,$rootScope,cookie,hrmAPIservice){function filterCourses(courses){for(var i=0;i<courses.length;i++){var course=courses[i];course.user_id==userData.id?course.can_edit=!0:course.can_edit=!1}$scope.courses=courses,console.log($scope.courses)}var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="Courses Details",$scope.courses=[],$scope.showModal=!1;var selectedCourse=null;hrmAPIservice.getCourseData(userData.id).then(function(response){console.log("Get Course Data: ",response.data.courses),filterCourses(response.data.courses)}),$scope.sort=function(keyname){$scope.sortKey=keyname,$scope.reverse=!$scope.reverse},$scope.activateCourse=function(course,status){0==status&&course.NumLearners>0&&!confirm("Warning, there are "+course.NumLearners+" learners who currently have this course pending. Do you wish to continue?")||hrmAPIservice.activateCourse(course.course_id,status).then(function(response){course.status=status})},$scope.removeCourse=function(course){$scope.showModal=!0,selectedCourse=course},$scope.remove=function(){$scope.showModal=!1,null!=selectedCourse&&hrmAPIservice.delCourse(selectedCourse.course_id,userData.id).then(function(response){console.log(response),filterCourses(response.data.courses)})},$scope.cancel=function(){$scope.showModal=!1},$scope.editCourse=function(course){location.href="#/edit_course/"+course.course_id},$scope.newCourse=function(){console.log("new"),location.href="#/add_course"}}]),app.controller("trainingcourselistController",["$scope","$rootScope","cookie","hrmAPIservice","$location",function($scope,$rootScope,cookie,hrmAPIservice,$location){var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.pageTitle="Training Courses",$scope.courses=[],$scope.showModal=!1,hrmAPIservice.getCoursesByUser(userData.id).then(function(response){$scope.gridOptionsComplex.data=response.data}),$scope.gridOptionsComplex={enableFiltering:!0,showGridFooter:!1,showColumnFooter:!1,onRegisterApi:function(registeredApi){gridApi=registeredApi},columnDefs:[{name:"id",visible:!1},{name:"course",width:"30%"},{name:"CourseStatus",width:"20%",cellClass:"center",cellClass:function(grid,row,col,rowRenderIndex,colRenderIndex){return"Pending"==grid.getCellValue(row,col)?"center pending":"Overdue"==grid.getCellValue(row,col)?"center expired":"center"},cellTemplate:'<a href="javascript:void(0);" ng-click="grid.appScope.gotoCourse(row.entity,1)">{{ grid.getCellValue(row, col) }}</a>'},{name:"DateStarted",width:"20%",enableFiltering:!0,cellClass:"center"},{name:"DateCompleted",width:"20%",cellClass:"center"},{name:"TimeLeft",filter:{term:""},width:"10%",enableCellEdit:!1,enableFiltering:!0,cellClass:function(grid,row,col,rowRenderIndex,colRenderIndex){return grid.getCellValue(row,col)<0?"center expired":"center"}}]},$scope.gotoCourse=function(courseObj){$location.path("/docourse/"+courseObj.course_id+"/"+courseObj.employee_id)}}]),app.controller("usersController",["$scope","$rootScope","cookie","hrmAPIservice",function($scope,$rootScope,cookie,hrmAPIservice){var userData=cookie.checkLoggedIn();cookie.getPermissions(),$scope.user={},$scope.showMessage=0,$scope.formEnabled=0,$scope.clear={},$scope.newUser=function(){$scope.userform.$setPristine(),$scope.user.id=0,$scope.user.account_id=userData.account_id,$scope.user.added_by=userData.id,$scope.user.update_by=0,$scope.formEnabled=1},$scope.editUser=function(user){$scope.showMessage=0,hrmAPIservice.getUserById(user.id).then(function(response){$scope.user=response.data.user,$scope.formEnabled=1})},$scope.activateUser=function(row,status){hrmAPIservice.activateUser(row.id,status).then(function(response){hrmAPIservice.getUsers(userData).then(function(response){$scope.gridOptionsComplex.data=response.data,$scope.user.update_by=userData.id})})},hrmAPIservice.getRoles().then(function(response){for(var roles=[],i=0;i<response.data.length;i++){var item=response.data[i];"Administrator"!=item.value&&(roles[roles.length]=item)}$scope.userroles=roles}),$scope.saveUser=function(){$scope.user.account_id=userData.account_id,$scope.user.added_by=userData.id,hrmAPIservice.saveChildUser($scope.user,userData).then(function(response){console.log("Save user: ",response),$scope.showMessage=1,$scope.success=response.data.success,$scope.userMessage=response.data.message,$scope.formEnabled=0,$scope.user={}})},$scope.clearForm=function(){$scope.user=angular.copy($scope.clear),$scope.user_form.$valid=!1},$scope.deleteUser=function(userDetail){confirm("Delete user "+userDetail.firstname+" "+userDetail.lastname+"? Are you sure?")&&hrmAPIservice.delete(userDetail,userData,"user").then(function(response){$scope.gridOptionsComplex.data=response.data})},$scope.gridOptionsComplex={enableFiltering:!0,showGridFooter:!1,showColumnFooter:!1,onRegisterApi:function(registeredApi){gridApi=registeredApi},columnDefs:[{name:"id",visible:!1},{name:"name",width:"20%"},{name:"username",width:"10%",cellClass:"center"},{name:"email",width:"25%",enableFiltering:!0,cellClass:"center"},{name:"UserRole",width:"15%",cellClass:"center"},{name:"status",width:"20%",enableFiltering:!1,cellClass:"center",cellTemplate:'<button class="btn btn-sm" ng-class="{\'btn-success\': row.entity.active == 1, \'btn-default\': row.entity.active == 0 }" style="margin-right: 0; border-top-right-radius: 0; border-bottom-right-radius: 0; " ng-click="grid.appScope.activateUser(row.entity,1)">Active</button><button class="btn btn-sm btn-default" ng-class="{\'btn-success\': row.entity.active == 0, \'btn-default\': row.entity.active == 1 }" ng-click="grid.appScope.activateUser(row.entity,0)" style="border-top-left-radius: 0; border-bottom-left-radius: 0;">Inactive</button></a>'},{name:"action",enableFiltering:!1,width:"10%",cellClass:"center",cellTemplate:'<div class="ui-grid-cell-contents"><i class="fa fa-edit fa-2x" ng-click="grid.appScope.editUser(row.entity)"></i><i class="fa fa-trash-o fa-2x text-danger" ng-click="grid.appScope.deleteUser(row.entity)"></i></div>'}]},hrmAPIservice.getUsers(userData,0).then(function(response){$scope.gridOptionsComplex.data=response.data})}]);